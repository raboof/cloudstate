version: 2.1
# CircleCi Build Config for Akka Serverless proxy
commands:
  install-java-11:
    description: install openjdk-11
    steps:
    - run:
        name: Install java 11
        command: |
          wget https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.8%2B10/OpenJDK11U-jdk_x64_linux_hotspot_11.0.8_10.tar.gz -O /tmp/openjdk-11.tar.gz

          sudo mkdir -p /usr/lib/jvm
          sudo tar xfvz /tmp/openjdk-11.tar.gz --directory /usr/lib/jvm
          rm -f /tmp/openjdk-11.tar.gz

          sudo sh -c 'for bin in /usr/lib/jvm/jdk-11.0.8+10/bin/*; do update-alternatives --install /usr/bin/$(basename $bin) $(basename $bin) $bin 100; done'
          sudo sh -c 'for bin in /usr/lib/jvm/jdk-11.0.8+10/bin/*; do update-alternatives --set $(basename $bin) $bin; done'

  setup_sbt:
    description: "Set up sbt"
    parameters:
      version:
        type: string
        default: "1.4.7"
    steps:
      - run:
          name: Install sbt
          command: |
            curl -L -o sbt-<< parameters.version >>.deb https://dl.bintray.com/sbt/debian/sbt-<< parameters.version >>.deb
            sudo dpkg -i sbt-<< parameters.version >>.deb
            rm sbt-<< parameters.version >>.deb

  save_sbt_cache:
    description: "Save sbt cache"
    steps:
      - save_cache:
          key: sbt-cache-01
          paths:
            - "~/.ivy2/cache"
            - "~/.sbt"
            - "~/.cache/coursier"

  restore_sbt_cache:
    description: "Restore sbt cache"
    steps:
      - restore_cache:
          key: sbt-cache-01

  setup_minikube:
    description: "Set up Minikube"
    steps:
      - run:
          name: Install dependencies
          command: sudo apt-get update && sudo apt-get -qq -y install conntrack
      - run:
          name: Install Minikube
          command: bin/prepare-minikube-linux.sh

  save_docker_image:
    description: "Save Docker image"
    parameters:
      tar_file:
        type: string
        default: ""
      docker_image:
        type: string
        default: ""
    steps:
    - run: |
        mkdir -p /tmp/workspace
        docker save -o /tmp/workspace/<< parameters.tar_file>> << parameters.docker_image >>

jobs:

  check-scalafmt:
    docker:
    - image: cimg/openjdk:11.0
    description: "Format checks"
    steps:
    - checkout
    - setup_sbt
    - restore_sbt_cache
    - run:
        name: Run scalafmt checks
        command: |
          sbt scalafmtCheckAll scalafmtSbtCheck || \
            { echo "[error] Code not formatted prior to commit. Run 'sbt scalafmtAll scalafmtSbt' then commit the reformatted code."; false; }
    - save_sbt_cache

  test-sbt:
    docker:
    - image: cimg/openjdk:11.0
    description: "sbt tests"
    steps:
    - checkout
    - setup_sbt
    - restore_sbt_cache
    - run:
        name: Run sbt tests
        command: sbt 'set concurrentRestrictions in Global += Tags.limitAll(1)' test
    - save_sbt_cache

  test-javascript-sdk:
    docker:
    - image: cimg/node:12.20.1
    description: "javascript-sdk tests"
    steps:
    - checkout
    - run:
        name: Run javascript-sdk tests
        command: |
          cd javascript-sdk && npm install && npm test && cd -
          cd javascript-sdk/docs/src/modules/javascript/examples && npm install && npm test && cd -
          cd samples/js-shopping-cart && npm install && npm test && cd -

  validate-docs:
    machine: true
    description: "validate docs"
    steps:
    - checkout
    - install-java-11
    - setup_sbt
    - restore_sbt_cache
    - run:
        name: Validate docs
        command: |
          make -C java-sdk/docs
          source /opt/circleci/.nvm/nvm.sh
          cd javascript-sdk && nvm install && cd -
          make -C javascript-sdk/docs
    - save_sbt_cache

  tck-integration-tests:
    machine: true
    description: "TCK integration tests"
    steps:
      - checkout
      - install-java-11
      - setup_sbt
      - restore_sbt_cache
      - run:
          name: Run npm install
          command: |
            source /opt/circleci/.nvm/nvm.sh
            cd javascript-sdk && nvm install && npm install && cd -
            cd javascript-sdk/tck && nvm install && npm install && cd -
      - run:
          name: Run TCK integration tests
          command: |
            source /opt/circleci/.nvm/nvm.sh && cd javascript-sdk && nvm use && cd -
            sbt \
              'set concurrentRestrictions in Global += Tags.limitAll(1)' \
              'set scalafmtOnCompile := false' \
              tck/it:test
      - save_sbt_cache

  build-sbt-images:
    docker:
    - image: cimg/openjdk:11.0
    description: "Build sbt non-native images"
    steps:
    - checkout
    - setup_sbt
    - restore_sbt_cache
    - setup_remote_docker
    - run:
        name: Build sbt images
        command: |
          sbt proxy-core/docker:publishLocal \
            java-shopping-cart/docker:publishLocal \
            java-eventsourced-shopping-cart/docker:publishLocal
    - save_docker_image:
        tar_file: akkaserverless-sbt-images.tar
        docker_image: akkaserverless/akkaserverless-proxy-core:latest akkaserverless/java-shopping-cart:latest akkaserverless/java-eventsourced-shopping-cart:latest
    - persist_to_workspace:
        root: /tmp/workspace
        paths:
        - akkaserverless-sbt-images.tar
    - save_sbt_cache

  build-operator:
    docker:
    - image: circleci/golang:1.13
    description: "Build operator image and manifests"
    steps:
    - checkout
    - restore_cache:
        keys:
        - gomod-cache-{{ checksum "operator/go.sum" }}
    - run: KUBEBUILDER=yes KUSTOMIZE=yes CONTROLLER_GEN=yes bin/setup-devtools.sh
    - run: make -C operator manifests test
    - run: |
        if [ -n "$(git status --untracked-files=no --porcelain)" ]; then
          echo "code needs formatting or manifests need to be regenerated: use \"make manifests test\" and check in any resulting diffs"
          git diff
          exit 1
        fi
    - setup_remote_docker
    - run: make -C operator docker-build
    - save_docker_image:
        tar_file: operator.tar
        docker_image: akkaserverless/cloudstate-operator:latest
    - persist_to_workspace:
        root: /tmp/workspace
        paths:
        - operator.tar
    - save_cache:
        key: gomod-cache-{{ checksum "operator/go.sum" }}
        paths:
        - /go/pkg/mod

  minikube-smoke-test:
    machine: true
    resource_class: large
    steps:
      - checkout
      - setup_minikube
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load docker images
          command: |
            docker image load < /tmp/workspace/akkaserverless-sbt-images.tar
            docker image load < /tmp/workspace/operator.tar
      - run:
          name: Deploy Cloudstate
          command: |
            kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v0.16.1/cert-manager.yaml
            echo "Waiting for cert-manager to be ready..."
            kubectl wait --for=condition=available --timeout=2m -n cert-manager deployment/cert-manager-webhook
            kubectl apply --validate=false -f operator/manifests/cloudstate-operator.yaml
            echo "Waiting for operator deployment to be ready..."
            if ! kubectl wait --for=condition=available --timeout=2m -n cloudstate-system deployment/cloudstate-controller-manager
            then
                kubectl describe -n cloudstate-system deployment/cloudstate-controller-manager
                kubectl describe -n cloudstate-system pods -l control-plane=controller-manager
                kubectl logs -l control-plane=controller-manager -n cloudstate-system -c manager
                exit 1
            fi
      - run:
          name: Run value-based shopping cart test (InMemory)
          command: bin/run-java-shopping-cart-test.sh InMemory --no-build
      - run:
          name: Run eventsourced shopping cart test (InMemory)
          command: bin/run-java-eventsourced-shopping-cart-test.sh InMemory --no-build

workflows:
  Checks:
    jobs:
      - check-scalafmt
  Tests:
    jobs:
      - test-sbt
      - test-javascript-sdk
      - validate-docs
      - tck-integration-tests
  Integration tests:
    jobs:
      - build-operator
      - build-sbt-images
      - minikube-smoke-test:
          name: Minikube smoke test
          requires:
            - build-operator
            - build-sbt-images
